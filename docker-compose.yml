version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: oficina-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: oficina_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - oficina-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d oficina_db']
      interval: 10s
      timeout: 5s
      retries: 5

  # API NestJS
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: oficina-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=oficina_db
      - DB_SCHEMA=public
      - JWT_SECRET=508e703c81a194c84a9895bd04362f504b33d8366a2f371cc0d346074fa6e7697c8f2e9d2df38ac8edb86f4935a45037053f16821d1667d6c3d8afaf082f366f
      - JWT_EXPIRES_IN=7d
      - PORT=3333
      - DOCUMENTATION_PREFIX=api/v1/oficina
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - SMTP_HOST="smtp.gmail.com"
      - PORT_EMAIL=465
      - SECURE_EMAIL=true
      - USER_EMAIL="junioryrj@gmail.com"
      - BBC_EMAIL="rodrigo.franco@unifio.edu.br"
      - PASS_EMAIL="oyjn prnc rfcy zfqz"
      - SERVER_URL=http://localhost:3333
    ports:
      - '3333:3333'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - oficina-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:3333/api/v1/oficina/status || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    container_name: oficina-redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oficina-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  oficina-network:
    driver: bridge
